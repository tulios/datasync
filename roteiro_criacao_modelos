1 - Subir o SQLServer e criar uma base de dados de teste. Essa base de dados 
    conterá apenas as tabelas as quais teram os modelos criados

2 - Rodar o script de criação das tabelas na base de teste.

3 - Configurar o acesso ao banco feito pela aplicação ruby no arquivo 
    db/database.yml

4 - Gerar os modelos e testes a partir tabelas da base de teste:
    Ex:
      PARAMS => :package, :path, :test_class
      
      jruby -S rake model:generate['com.datasync.models.barco.professor',
                  '/Users/tulios/Desktop/models/professor','TesteBarco']

5 - Configurar acesso ao banco pela aplicação java no persistence.xml

6 - Adicionar o modelo da tabela no pacote correto e verificar se tem chave composta. 
    Caso tiver, sobrescrever o método isCompoundKey e o método getIndexId 
    contendo o id do objeto e o id da referência:
    Ex:
      @Override
      public String getIndexId() {
        return getIdformulario()+"#"+getIdtipocombustivel();
      }
      
6.1 - Caso o modelo tenha o mesmo nome de um em outro dominio, por exemplo, tblCabecalhoAluno em barco
	  e bicicleta, faça da seguinte forma:
	  
	  No modelo:
	  
	  Coloque o name no @Entity incluindo o nome do pacote
	  @Entity(name="com.datasync.models.barco.aluno.Tblcabecalhoaluno")
	  
	  Implemente IndexableWithDifferentName
	  public class Tblcabecalhoaluno extends IndexableEntity implements IndexableWithDifferentName {
	  
	  Sobrescreva o método getDifferentName retornando o nome definido no @Entity
	  @Override
	  public String getDifferentName() {
	  	return "com.datasync.models.barco.aluno.Tblcabecalhoaluno";
	  }
	  
	  No ModelUtil:
	  
	  Registre o modelo utilizando o nome completo do pacote. Faça isso para os 2 modelos
	  indexables.add(new com.datasync.models.bicicleta.aluno.Tblidentificacaoaluno());
	  
7 - Adicionar o teste no pacote correto. Popular os dados do objeto para teste. 
    Instancia e salvar, no servidor local e remoto, uma possível dependência 
    do objeto. 
    
7.1 - Lembre-se, se o teste for para um modelo que implemente IndexableWithDifferentName, altere o nome
	  da tabela no jpaql de Tblcabecalhoaluno para com.datasync.models.barco.aluno.Tblcabecalhoaluno,
	  ou seja, utilizando o nome do @Entity
	  
	  ex: "select count(t.idformulario) from com.datasync.models.bicicleta.diretor.Tblcabecalhodiretor t"
  
8 - Adicionar a classe e o seu teste nas classes:
      ModelUtil.java
      TodosBarco | TodosCusto (Dependendo do banco)
      TesteBarco | TodosCusto (Dependendo do banco)
      
      
== Gerando os inserts para as tabelas tipo

jruby -S rake tipo:generate TABLE_NAMES='tblTipoAcidenteEscola, tblTipoAcompanhanteEscola, tblTipoAtividade, tblTipoBicicleta, tblTipoCalcado, tblTipoComoVaoEscola, tblTipoConsertaBicicleta, tblTipoCuidadoBicicleta, tblTipoDeslocamento, tblTipoEmpurra, tblTipoEquipamentoProtecao, tblTipoEscolaridade, tblTipoGuardaBicicleta, tblTipoLocalEstacionamento, tblTipoMotivoUtilizacao, tblTipoObstaculoTransito, tblTipoOutroTransporte, tblTipoProblemasTransito, tblTipoProtecao, tblTipoProtecaoContraChuva, tblTipoSujou'  >> insertTipos.sql

no o final (>> insertTipos.sql), esse comando exibe no terminal, a saida eh redirecionada para o arquivo.
